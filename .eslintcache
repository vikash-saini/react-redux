[{"D:\\react-redux\\src\\reportWebVitals.js":"1","D:\\react-redux\\src\\App.js":"2","D:\\react-redux\\src\\Counter.js":"3","D:\\react-redux\\src\\index.js":"4","D:\\react-redux\\src\\Phonebook.js":"5","D:\\react-redux\\src\\Toggle.js":"6","D:\\react-redux\\src\\components\\Board\\BoardContainer.js":"7","D:\\react-redux\\src\\DragContainer.js":"8","D:\\react-redux\\src\\guest.js":"9"},{"size":362,"mtime":1608527916779,"results":"10","hashOfConfig":"11"},{"size":1370,"mtime":1612507464234,"results":"12","hashOfConfig":"11"},{"size":676,"mtime":1610768207453,"results":"13","hashOfConfig":"11"},{"size":1014,"mtime":1610768287038,"results":"14","hashOfConfig":"11"},{"size":1849,"mtime":1610704527481,"results":"15","hashOfConfig":"11"},{"size":670,"mtime":1611168318252,"results":"16","hashOfConfig":"11"},{"size":829,"mtime":1610711149386,"results":"17","hashOfConfig":"11"},{"size":5261,"mtime":1610708729659,"results":"18","hashOfConfig":"11"},{"size":303,"mtime":1612507522472,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1juj9r9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-redux\\src\\reportWebVitals.js",[],"D:\\react-redux\\src\\App.js",["42","43","44"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Counter from \"./Counter\";\nimport Phonebook from \"./Phonebook\";\nimport Toggle from \"./Toggle\";\nimport BoardContainer from \"./components/Board/BoardContainer\";\nimport DragContainer from \"./DragContainer\";\nimport \"./App.css\";\nimport User from \"./user\";\n\nexport const MyContext = React.createContext();\nfunction App() {\n  const [state, setState] = React.useState({ name: \"Rahul\" });\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/toggle\">Toggle</Link>\n            </li>\n            <li>\n              <Link to=\"/counter\">Counter</Link>\n            </li>\n            <li>\n              <Link to=\"/phonebook\">Phonebook</Link>\n            </li>\n          </ul>\n          <Switch>\n            <Route exact path=\"/toggle\" component={Toggle}></Route>\n            <Route exact path=\"/counter\" component={Counter}></Route>\n            <Route exact path=\"/phonebook\" component={Phonebook}></Route>\n          </Switch>\n        </div>\n      </Router>\n      <MyContext.Provider value={state.name}>\n        <div className=\"container\">\n          <BoardContainer />\n          <User />\n        </div>\n      </MyContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\react-redux\\src\\Counter.js",[],["45","46"],"D:\\react-redux\\src\\index.js",[],["47","48"],"D:\\react-redux\\src\\Phonebook.js",[],"D:\\react-redux\\src\\Toggle.js",[],"D:\\react-redux\\src\\components\\Board\\BoardContainer.js",[],"D:\\react-redux\\src\\DragContainer.js",["49"],"import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\r\n    id: `item-${k + offset}`,\r\n    content: `item ${k + offset}`,\r\n  }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle,\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250,\r\n  \r\n});\r\n\r\nclass DragContainer extends Component {\r\n  state = {\r\n    items: getItems(10),\r\n    selected: getItems(5, 10),\r\n  };\r\n\r\n  /**\r\n   * A semi-generic way to handle multiple lists. Matches\r\n   * the IDs of the droppable container to the names of the\r\n   * source arrays stored in the state.\r\n   */\r\n  id2List = {\r\n    droppable: \"items\",\r\n    droppable2: \"selected\",\r\n  };\r\n\r\n  getList = (id) => this.state[this.id2List[id]];\r\n\r\n  onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = reorder(\r\n        this.getList(source.droppableId),\r\n        source.index,\r\n        destination.index\r\n      );\r\n\r\n      let state = { items };\r\n\r\n      if (source.droppableId === \"droppable2\") {\r\n        state = { selected: items };\r\n      }\r\n\r\n      this.setState(state);\r\n    } else {\r\n      const result = move(\r\n        this.getList(source.droppableId),\r\n        this.getList(destination.droppableId),\r\n        source,\r\n        destination\r\n      );\r\n\r\n      this.setState({\r\n        items: result.droppable,\r\n        selected: result.droppable2,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\" direction=\"horizontal\" type=\"list\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {item.content}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <Droppable droppableId=\"droppable2\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.selected.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {item.content}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragContainer;\r\n","D:\\react-redux\\src\\guest.js",[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":8,"column":8,"nodeType":"52","messageId":"53","endLine":8,"endColumn":21},{"ruleId":"50","severity":1,"message":"55","line":14,"column":17,"nodeType":"52","messageId":"53","endLine":14,"endColumn":25},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"50","severity":1,"message":"62","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DragContainer' is defined but never used.","'setState' is assigned a value but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]